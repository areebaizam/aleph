// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$light-theme: mat.define-theme((color: (theme-type: light,
        primary: mat.$rose-palette,
        tertiary: mat.$blue-palette,
      )));

$dark-theme: mat.define-theme((color: (theme-type: dark,
        primary: mat.$rose-palette,
        tertiary: mat.$blue-palette,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

//Colors
// $primary: mat.get-theme-color($theme, primary);
// $primary-container: mat.get-theme-color($theme, primary-container);
// $on-primary: mat.get-theme-color($theme, on-primary);
// $primary-80: mat.get-theme-color($theme, primary, 80);
// // 
// $secondary: mat.get-theme-color($theme, secondary);
// $secondary-container: mat.get-theme-color($theme, secondary-container);
// $on-secondary: mat.get-theme-color($theme, on-secondary);
// $secondary-80: mat.get-theme-color($theme, secondary, 80);

// $surface: mat.get-theme-color($theme, surface);
// $surface-container: mat.get-theme-color($theme, surface-container);

html {
  // Apply the light theme by default
  @include mat.all-component-themes($light-theme);

  // Apply the light theme only when the user prefers light themes.
  // @media (prefers-color-scheme: dark) {
  //   // Use the `-color` mixins to only apply color styles without reapplying the same
  //   // typography and density styles.
  //   // @include mat.all-component-colors($dark-theme);
  // }  
}
.dark-theme{
  @include mat.all-component-colors($dark-theme);
}